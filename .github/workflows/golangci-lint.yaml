name: Lint Code with golangci-lint
permissions:
  contents: read

on:
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Run golangci-lint
    runs-on: ubuntu-24.04

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      # Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: "1.24.5"

      # Cache golangci-lint binary for faster execution
      - name: Cache golangci-lint
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ~/.cache/golangci-lint
          key: golangci-lint-${{ runner.os }}-${{ hashFiles('.golangci.yml') }}
          restore-keys: |
            golangci-lint-${{ runner.os }}-

      # Install golangci-lint
      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.64.8

      # Clean and setup Go modules aggressively
      - name: Clean Go cache and modules
        run: |
          go clean -modcache -cache -testcache -fuzzcache
          rm -rf $(go env GOCACHE) $(go env GOMODCACHE) || true
          rm -rf vendor || true
          go mod download
          go mod tidy
          go mod verify

      # Verify Go environment
      - name: Verify Go environment
        run: |
          go version
          go env
          echo "=== Checking Go modules ==="
          go list -m all
          echo "=== Testing basic build ==="
          go build ./...
          echo "=== Verifying imports ==="
          go list -f '{{.ImportPath}}: {{.Imports}}' ./...

      # Run golangci-lint
      - name: Run golangci-lint
        run: |
          echo "=== Running golangci-lint with verbose output ==="
          golangci-lint run --timeout 5m --verbose --print-resources-usage
